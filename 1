# docker-compose.yml
version: '3.8'

services:
  server:
    image: nginx:alpine
    volumes:
      - ./static:/usr/share/nginx/html
      - ./configs/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./configs/healthcheck.html:/usr/share/nginx/html/healthcheck.html
    networks:
      - rdu-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/healthcheck.html"]
      interval: 30s
      timeout: 10s
      retries: 3

  rdu:
    image: envoyproxy/envoy:v1.28-latest
    volumes:
      - ./configs/envoy.yaml:/etc/envoy/envoy.yaml
      - ./metrics:/metrics
    ports:
      - "8080:8080"
      - "9901:9901"  # Envoy Admin API
    networks:
      - rdu-network
    depends_on:
      server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9901/ready"]
      interval: 30s
      timeout: 5s
      retries: 3

  client:
    image: grafana/k6:latest
    volumes:
      - ./tests:/tests
      - ./results:/results
    networks:
      - rdu-network
    command: ["tail", "-f", "/dev/null"]  # Более надежная команда
    depends_on:
      server:
        condition: service_healthy

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./metrics:/metrics
    ports:
      - "9090:9090"
    networks:
      - rdu-network

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./dashboard/grafana.ini:/etc/grafana/grafana.ini
      - ./dashboard/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    networks:
      - rdu-network

networks:
  rdu-network:
          A
    driver: bridge
