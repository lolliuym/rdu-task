admin:
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 }
  access_log_path: "/dev/null"

static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address: { address: 0.0.0.0, port_value: 8080 }
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          generate_request_id: true
          
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match:
                  prefix: "/"
                  headers:
                  - name: "user-agent"
                    exact_match: "BadBot/1.0"
                direct_response:
                  status: 403
                  body:
                    inline_string: "Access Forbidden: Bad Bot Detected"
              
              - match:
                  prefix: "/"
                  headers:
                  - name: "user-agent"
                    exact_match: "EvilScraper/2.0"
                direct_response:
                  status: 403
                  body:
                    inline_string: "Access Forbidden: Bad Bot Detected"
              
              - match:
                  prefix: "/"
                  headers:
                  - name: "user-agent" 
                    exact_match: "SuspiciousBot/1.0"
                redirect:
                  path_redirect: "/challenge"
                  response_code: FOUND
              
              - match:
                  prefix: "/"
                  headers:
                  - name: "user-agent" 
                    exact_match: "UnknownCrawler/3.0"
                redirect:
                  path_redirect: "/challenge"
                  response_code: FOUND
              
              - match: { prefix: "/" }
                route: { cluster: server }
          
          http_filters:
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  clusters:
  - name: server
    connect_timeout: 0.25s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: server
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: server
                port_value: 80
